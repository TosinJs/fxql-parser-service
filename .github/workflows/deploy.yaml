name: Deploy to Contabo

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy over SSH to Contabo
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.CONTABO_HOST }}
          username: ${{ secrets.CONTABO_USER }}
          password: ${{ secrets.CONTABO_SSH_KEY }}
          port: 22
          script: |
            echo "Navigating to deployment directory"
            mkdir -p ~/yara-deployment && cd ~/yara-deployment

            echo "Removing old repo if exists"
            rm -rf wallets

            echo "Cloning private repo using token"
            git clone https://${{ secrets.PAT }}@github.com/yaracash/yara.cash-wallets.git wallets

            echo "Setting environment variables in root directory"
            cat <<EOF > ~/yara-deployment/.env
            FLUTTERWAVE_SECRET_KEY=${{ secrets.FLUTTERWAVE_SECRET_KEY }}
            FLUTTERWAVE_BASE_URL=${{ secrets.FLUTTERWAVE_BASE_URL }}

            APP_ENV=production

            DATABASE_URL=${{ secrets.DATABASE_URL }}

            BYBIT_BASE_URL=${{ secrets.BYBIT_BASE_URL }}
            GREY_BASE_URL=${{ secrets.GREY_BASE_URL }}

            # Redis Configuration
            REDIS_URL=${{ secrets.REDIS_URL }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            REDIS_PASS=${{ secrets.REDIS_PASS }}

            # Wallet Configuration
            WALLET_BASE_URL=${{ secrets.WALLET_BASE_URL }}
            WALLET_SECRET_KEY=${{ secrets.WALLET_SECRET_KEY }}

            CONFIRMATIONS=${{ secrets.CONFIRMATIONS }}

            # Ethereum Mainnet
            MAINNET_ENABLED=${{ secrets.MAINNET_ENABLED }}
            MAINNET_USDC_CONTRACT_ADDRESS=${{ secrets.MAINNET_USDC_CONTRACT_ADDRESS }}
            MAINNET_USDT_CONTRACT_ADDRESS=${{ secrets.MAINNET_USDT_CONTRACT_ADDRESS }}
            MAINNET_RPC_URL=${{ secrets.MAINNET_RPC_URL }}
            MAINNET_BLOCK_TIME=${{ secrets.MAINNET_BLOCK_TIME }}

            # Base Network
            BASE_ENABLED=${{ secrets.BASE_ENABLED }}
            BASE_USDC_CONTRACT_ADDRESS=${{ secrets.BASE_USDC_CONTRACT_ADDRESS }}
            BASE_USDT_CONTRACT_ADDRESS=${{ secrets.BASE_USDT_CONTRACT_ADDRESS }}
            BASE_RPC_URL=${{ secrets.BASE_RPC_URL }}
            BASE_BLOCK_TIME=${{ secrets.BASE_BLOCK_TIME }}

            # Polygon Network
            POLYGON_ENABLED=${{ secrets.POLYGON_ENABLED }}
            POLYGON_USDC_CONTRACT_ADDRESS=${{ secrets.POLYGON_USDC_CONTRACT_ADDRESS }}
            POLYGON_USDT_CONTRACT_ADDRESS=${{ secrets.POLYGON_USDT_CONTRACT_ADDRESS }}
            POLYGON_RPC_URL=${{ secrets.POLYGON_RPC_URL }}
            POLYGON_BLOCK_TIME=${{ secrets.POLYGON_BLOCK_TIME }}

            # Arbitrum Network
            ARBITRUM_ENABLED=${{ secrets.ARBITRUM_ENABLED }}
            ARBITRUM_USDC_CONTRACT_ADDRESS=${{ secrets.ARBITRUM_USDC_CONTRACT_ADDRESS }}
            ARBITRUM_USDT_CONTRACT_ADDRESS=${{ secrets.ARBITRUM_USDT_CONTRACT_ADDRESS }}
            ARBITRUM_RPC_URL=${{ secrets.ARBITRUM_RPC_URL }}
            ARBITRUM_BLOCK_TIME=${{ secrets.ARBITRUM_BLOCK_TIME }}

            # Celo Network
            CELO_ENABLED=${{ secrets.CELO_ENABLED }}
            CELO_USDC_CONTRACT_ADDRESS=${{ secrets.CELO_USDC_CONTRACT_ADDRESS }}
            CELO_USDT_CONTRACT_ADDRESS=${{ secrets.CELO_USDT_CONTRACT_ADDRESS }}
            CELO_RPC_URL=${{ secrets.CELO_RPC_URL }}
            CELO_BLOCK_TIME=${{ secrets.CELO_BLOCK_TIME }}

            MESO_PARTNER_ID=${{ secrets.MESO_PARTNER_ID }}
            MESO_ENVIRONMENT=${{ secrets.MESO_ENVIRONMENT }}

            EMAIL_FROM=${{ secrets.EMAIL_FROM }}
            EMAIL_API_KEY=${{ secrets.EMAIL_API_KEY }}
            EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            EMAIL_PORT=${{ secrets.EMAIL_PORT }}
            EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
            ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}

            PORT=${{ secrets.PORT }}

            SUPPORT_EMAIL=${{ secrets.SUPPORT_EMAIL }}

            CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
            CLOUDFLARE_ACCESS_KEY_ID=${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
            CLOUDFLARE_TOKEN=${{ secrets.CLOUDFLARE_TOKEN }}
            CLOUDFLARE_BUCKET_NAME=${{ secrets.CLOUDFLARE_BUCKET_NAME }}
            CLOUDFLARE_PUBLIC_BASE_URL=${{ secrets.CLOUDFLARE_PUBLIC_BASE_URL }}

            SUPABASE_JWT_SECRET=${{ secrets.SUPABASE_JWT_SECRET }}
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}

            AUTH_PROVIDER=${{ secrets.AUTH_PROVIDER }}
            PRIVY_BASE_URL=${{ secrets.PRIVY_BASE_URL }}
            PRIVY_SECRET=${{ secrets.PRIVY_SECRET }}
            PRIVY_APP_ID=${{ secrets.PRIVY_APP_ID }}
            PRIVY_JWT_PUBLIC_KEY=${{ secrets.PRIVY_JWT_PUBLIC_KEY }}

            SHOULD_AUTO_UPDATE_EXCHANGE_RATES=${{ secrets.SHOULD_AUTO_UPDATE_EXCHANGE_RATES }}
            EOF

            echo "Setting environment variables in wallets directory"
            cat <<EOF > ~/yara-deployment/wallets/.env
            ZERODEV_API_KEY=${{ secrets.ZERODEV_API_KEY }}

            PRIVATE_KEY_SHARE_1=${{ secrets.PRIVATE_KEY_SHARE_1 }}
            PRIVATE_KEY_SHARE_2=${{ secrets.PRIVATE_KEY_SHARE_2 }}
            PRIVATE_KEY_SHARE_3=${{ secrets.PRIVATE_KEY_SHARE_3 }}

            ENCRYPTION_KEY_SHARE_1=${{ secrets.ENCRYPTION_KEY_SHARE_1 }}
            ENCRYPTION_KEY_SHARE_2=${{ secrets.ENCRYPTION_KEY_SHARE_2 }}
            ENCRYPTION_KEY_SHARE_3=${{ secrets.ENCRYPTION_KEY_SHARE_3 }}

            ZERODEV_BUNDLER_RPC=${{ secrets.ZERODEV_BUNDLER_RPC }}

            DATABASE_URL=${{ secrets.WALLETS_DATABASE_URL }}
            SECRET_KEY=${{ secrets.WALLETS_SECRET_KEY }}
            EOF

            echo "Running Docker Compose"
            cd wallets
            docker-compose down
            docker-compose pull
            docker-compose up -d --build
